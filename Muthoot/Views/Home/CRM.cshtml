@model Muthoot.Models.CRM_Model

@{
    ViewData["Title"] = "CRM Page";
}

<div class="container p-2 rounded" style="margin-top:80px;">
    <h2 class="text-center p-1 rounded text-uppercase border border-primary" style="background: linear-gradient(to left, #7ecbff, #0033a0);color:white">Muthoot</h2>
    <div class="container p-5 rounded shadow mt-4 bg-white cardbg4">
        <div class="row mb-4 align-items-center" style="margin-top:-35px;">
            <div class="col text-start">
                <h3 class="text-primary mt-4 mb-0">
                    <img src="~/image/muthooticon (2).png" width="70" /> Muthoot
                </h3>
            </div>
            <div class="col-lg-6 col-md-12 col-sm-12 mt-0 text-end">
                @Html.LabelFor(m => m.Dialer_Config, htmlAttributes: new { @class = "control-label d-flex justify-content-end mb-1 mt-2" })
                <div class="input-group">
                    @Html.EditorFor(m => m.Dialer_Config, new { htmlAttributes = new { @class = "form-control input-lg" } })
                    <button type="button" class="btn btn-primary" onclick="copyText()" id="copyButton">
                        <i class="fa fa-copy"></i> Copy
                    </button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3 col-sm-12 col-md-12">
                <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="SearchKey" id="btnradio1" value="MobileNo" autocomplete="off" onchange="updateLabel()" @(Model.SearchKey == "MobileNo" ? "checked" : "") checked />
                    <label class="btn btn-outline-primary button" for="btnradio1"><i class="fa-solid fa-mobile-screen-button"></i> Mobile No</label>

                    <input type="radio" class="btn-check" name="SearchKey" id="btnradio2" value="PANNo" autocomplete="off" onchange="updateLabel()" @(Model.SearchKey == "PANNo" ? "checked" : "") />
                    <label class="btn btn-outline-primary button" for="btnradio2"><i class="fa-regular fa-address-card"></i> PAN No</label>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-lg-1 col-md-12 col-sm-12">
                <label id="selectedSearchBy" class="d-flex align-items-center mb-1 mt-1">MobileNo</label>
            </div>
            <div class="col-lg-3 col-md-12 col-sm-12 mt-lg-0 mt-2">
                @*<input type="text" maxlength="10" id="txtsearch" class="form-control border border-primary" name="value" value="@ViewBag.Type" />*@
                <input type="text" maxlength="10" id="txtsearch" class="form-control border border-primary" name="SearchValue" value="@Model.SearchValue" />
            </div>
            <div class="col-lg-2 col-md-12 col-sm-12 mt-lg-0 mt-2">
                <button type="button" class="btn btn-outline-primary form-control button" id="btnsearch" style="background: linear-gradient(to left,#0033a0); color: white;">
                    <i class="fa-solid fa-magnifying-glass"></i> Search
                </button>
            </div>
            <div class="col-lg-1 col-md-12 col-sm-12 mt-lg-0 mt-2">
                <a href="@Url.Action("CRM", "Home")" class="btn btn-outline-primary form-control button">
                    <i class="fa-solid fa-xmark"></i> Clear
                </a>
            </div>
            <div class="col-lg-5 col-md-12 col-sm-12 mt-lg-0 mt-2 btn btn-primary" id="DivStage" style="display:none">

                <label class="fw-bold mt-1">Stage Completed</label>


                <input type="hidden" value="@Model.MobileNumber" />
                <label class="mt-1" id="txtstage">: @Model.StageName</label>
            </div>
        </div>
        <div>
            <div class="mt-3" id="CustDeatils" style="display:none">
                <div class="p-2">
                    <div class="rounded" style="border: 1px solid #0033a0">
                        <div class="row p-3">
                            <div class="col-lg-1 col-md-6 col-sm-6 mt-lg-0 mt-2">
                                <label class="text fw-bold">Product</label>
                            </div>
                            <div class="col-lg-2 col-md-6 col-sm-6 mt-lg-0 mt-2">
                                <label class="text" id="txtProduct">: @Model.Product</label>
                            </div>
                            <div class="col-lg-1 col-md-6 col-sm-6 mt-lg-0 mt-2">
                                <label class="text fw-bold">ParentCode</label>
                            </div>
                            <div class="col-lg-2 col-md-6 col-sm-6 mt-lg-0 mt-2">
                                <label class="text" id="txtProductCode">: @Model.ProductCode</label>
                            </div>
                            <div class="col-lg-1 col-md-6 col-sm-6 mt-lg-0 mt-2">
                                <label class="text fw-bold">ProductType</label>
                            </div>
                            <div class="col-lg-2 col-md-6 col-sm-6 mt-lg-0 mt-2">
                                <label class="text" id="txtProductType">: @Model.ProductType</label>
                            </div>
                            <div class="col-lg-1 col-md-6 col-sm-6 mt-lg-0">
                                <label class="text fw-bold">MonthCode</label>
                            </div>
                            <div class="col-lg-2 col-md-6 col-sm-6 mt-lg-0">
                                <label class="text" id="txtMonthCode">: @Model.MonthCode</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container p-0 mt-3 rounded" style="margin-top:80px;">

                    <h5 class="text-center border border-primary button p-1 rounded" data-bs-toggle="collapse" data-bs-target="#DivTempTable1" style="background: linear-gradient(to left, #7ecbff, #0033a0, #7ecbff); color: white; cursor: pointer;"><i class="fa-solid fa-clock-rotate-left fa-xs"></i> History</h5>
                    <div id="DivTempTable1" class="grid-wrapper border border-primary rounded collapse table-responsive"></div>
                </div>
                <div class="container p-0 mt-3 rounded" style="margin-top:80px;">
                    <h5 class="text-center p-1 border border-primary rounded" style="background: linear-gradient(to left, #7ecbff, #0033a0, #7ecbff); color: white"><i class="fa-solid fa-coins fa-xs"></i> Loan Details</h5>
                    <div class="mt-1 p-3">
                        <textarea class="form-control border border-primary" id="txtLoanDetails" style="height: 200px; background-color: #DFF2FF" disabled>@Model.LoanDetails</textarea>
                    </div>
                </div>
                <div class="container p-0 mt-3 rounded" style="margin-top:80px;">
                    <h5 class="text-center p-1 border border-primary rounded" style="background: linear-gradient(to left, #7ecbff, #0033a0, #7ecbff); color: white"><i class="fa-solid fa-user fa-xs"></i> Customer Details</h5>
                    <div class="mt-1 p-3">
                        <textarea class="form-control border border-primary" id="txtCustomerDetails" style="height: 200px; background-color: #DFF2FF" disabled>@Model.CustomerDetails</textarea>
                    </div>
                </div>
            </div>
        </div>
        <div class="container p-0 mt-3 rounded" style="margin-top:80px;">
            <h5 class="text-center p-1 border border-primary rounded" style="background: linear-gradient(to left, #7ecbff, #0033a0, #7ecbff); color: white"><i class="fa-solid fa-pen fa-xs"></i> Updation Panel</h5>
            <div class="mt-1 p-3">
                @if (Model!=null)
                {

                    @Html.HiddenFor(m => m.Id, new { @id = "hdhId" })
                    @Html.HiddenFor(m => m.MobileNumber)
                    @Html.HiddenFor(m => m.Pan)
                    @Html.HiddenFor(m => m.Stage, new { @id = "stage" })
                    @Html.HiddenFor(m => m.MonthCode)
                    @Html.HiddenFor(m => m.campaignId)
                    @Html.HiddenFor(m => m.crtObjectId)
                    @Html.HiddenFor(m => m.sessionId)
                    @Html.HiddenFor(m => m.userCrtObjectId)
                    @Html.HiddenFor(m => m.customerId)
                    @Html.HiddenFor(m => m.leadId)
                    @Html.HiddenFor(m => m.lead_name)
                    @Html.HiddenFor(m => m.dialer_callType)
                    @Html.HiddenFor(m => m.crm_push_generated_time)
                    @Html.HiddenFor(m => m.instanceId)
                    @Html.HiddenFor(m => m.locale)
                    @Html.HiddenFor(m => m.origin)
                    @Html.HiddenFor(m => m.iframeId)
                    @Html.HiddenFor(m => m.userId, new { @id = "userId" })


                }

                <div class="row mt-3">
                    <div class="col-lg-3 col-md-12 col-sm-12 mt-lg-0 mt-2">
                        @Html.LabelFor(m => m.MainDisposition)
                        @Html.DropDownListFor(m => m.MainDisposition, Model.MainDispositionList, "Select", new { @class = "form-control border border-primary", @id = "ddlMainDisposition" })
                    </div>
                    <div class="col-lg-3 col-md-12 col-sm-12 mt-lg-0 mt-2">
                        @Html.LabelFor(m => m.SubDisposition, new { @style = "display:none;", @id = "lblSubDispo" })
                        @Html.DropDownListFor(m => m.SubDisposition, Model.SubDispositionList, "Select", new { @class = "form-control border border-primary", @id = "ddlSubDisposition", @style = "display:none;" })
                    </div>
                    <div class="col-lg-2 col-md-12 col-sm-12 mt-lg-0 mt-2">
                        @Html.LabelFor(m => m.CallBackDate, new { @style = "display:none;", @id = "lblcallbackdate" })
                        @Html.TextBoxFor(m => m.CallBackDate, new
                            {
                                @type = "datetime-local",
                                @class = "form-control border border-primary",
                                @style = "display:none;",
                                @id = "txtcallbackdate",
                                @min = DateTime.Now.ToString("yyyy-MM-ddTHH:mm")
                            })
                    </div>
                    <div class="col-lg-4 col-md-12 col-sm-12 mt-lg-0 mt-2">
                        <label style="display:none;" class="mt-4" id="lblcbnote"><small>Please Select FollowUp Time Between 9AM to 7PM</small></label>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-lg-12">
                        @Html.LabelFor(m => m.Remarks)
                        @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-lg-2 col-md-12 col-sm-12 mt-lg-0 mt-2">
                        <button type="button" class="btn btn-primary button" id="btnSub"><i class="fa-solid fa-floppy-disk"></i> Save</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content border-danger" id="confirmLabelbr">
                <div class="modal-header bg-danger text-white" id="confirmLabelbg">
                    <h5 class="modal-title" id="confirmLabel">Confirm Submission</h5>
                </div>
                <div class="modal-body" id="lblmessage">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-danger cancel" id="btnCancel" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="confirmSubmit" class="btn btn-danger">Yes, Submit</button>
                </div>
            </div>
        </div>
    </div>
    <div class="text-center mt-2"><small>&copy; @DateTime.Now.Year - IMarque. All rights reserved.</small></div>
</div>

<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script src="~/Scripts/dynamic-table-json-1.2.js"></script>
@section Scripts {
    <script>
        $(function () {
            if ($('#txtsearch').val().trim().length > 0) {
                $('#btnsearch').click();
            }
        });
    </script>
}
<script>
            $('#txtcallbackdate').on('change blur', function () {
        const val = this.value; // e.g. "2025-06-04T00:00"
        if (!val) return;

        // Extract time part
        const timePart = val.split('T')[1];
        if (!timePart) {
            // No time part: show warning or set default?
            snackBar("danger", "Please select a time between 9:00 AM and 7:00 PM.", "✘", 5000, "0.5s", "tr");
            this.value = "";
            return;
        }

        const [hourStr, minuteStr] = timePart.split(':');
        const hour = parseInt(hourStr, 10);
        const minute = parseInt(minuteStr, 10);

        // Check time range (including minutes if needed)
        if (hour < 9 || (hour === 19 && minute > 0) || hour > 19) {
            snackBar("danger", "Please select a time between 9:00 AM and 7:00 PM.", "✘", 5000, "0.5s", "tr");
            this.value = "";
        }
    });

        function updateLabel() {
            var selectedValue = document.querySelector('input[name="SearchKey"]:checked').value;
            document.getElementById("selectedSearchBy").textContent = selectedValue;
        }
        window.onload = function () {
            if (document.querySelector('input[name="searchBy"]:checked')) {
                updateLabel();
            }
        };
    $(function () {
        try {
            function getQueryParams() {
                var params = {};
                var queryString = window.location.search.substring(1);
                var regexstr = /([^&=]+)=([^&]*)/g;
                var match;
                while ((match = regexstr.exec(queryString))) {
                    params[decodeURIComponent(match[1])] = decodeURIComponent(match[2]);
                }
                return params;
            }
        $("#btnsearch").click(function () {
            $('.spinner').css('display', 'block').fadeIn();
            var regex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;
            var regexMasked = /^X{6}[0-9]{4}$/;
            var regexMaskedPan = /^X{6}[0-9]{3}[A-Za-z0-9]$/;

            var MFL = new Object();
            MFL.SearchKey = $("input[name='SearchKey']:checked").val();
            MFL.SearchValue = $("#txtsearch").val();
            MFL.userId = $("#userId").val();

            if(MFL.SearchValue && MFL.SearchValue.trim().length > 0){
                if (MFL.SearchValue.length != 10 || regexMasked.test(MFL.SearchValue) || regexMaskedPan.test(MFL.SearchValue)) {
                    snackBar("danger", "Please enter a valid input!", "✘", 5000, "0.5s", "tr");
                    $('.spinner').css('display', 'block').fadeOut();
                    $("#txtsearch").val("");
                    return false;
                }
            }
            if (MFL.SearchKey === "MobileNo") {
                if (regex.test(MFL.SearchValue)) {
                    snackBar("danger", "You have entered a PAN No but selected search by Mobile No!", "✘", 5000, "0.5s", "tr");
                    $('.spinner').css('display', 'block').fadeOut();
                    $("#txtsearch").val("");
                    return false;
                }
            }

            if (MFL.SearchKey === "PANNo") {
                if (!regex.test(MFL.SearchValue)) {
                    snackBar("danger", "You have entered a Mobile No but selected search by PAN No!", "✘", 5000, "0.5s", "tr");
                    $('.spinner').css('display', 'block').fadeOut();
                    $("#txtsearch").val("");
                    return false;
                }
            }
            if (MFL.SearchValue.length > 0) {
                var queryParams = getQueryParams();
                for (var key in queryParams) {
                    if (queryParams.hasOwnProperty(key)) {
                        MFL[key] = queryParams[key];
                    }
                }
                $.ajax({
                    type: "POST",
                    url: '@Url.Content("~/")' + "Home/Get_CustomerDetails",
                    data: JSON.stringify(MFL),
                    contentType: "application/json; charset:utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result != null) {
                            if (result != undefined) {
                                if (result.status == "success") {
                                    console.log(result);
                                    $('#CustDeatils').show('fade');
                                    $('#DivStage').show('fade');
                                    $('#hdhId').val(result.id);
                                    console.log("Id:"+result.id);
                                    $("#MobileNumber").val(result.mobileNumber);
                                    console.log("MobileNumber:" +result.mobileNumber);
                                    $("#Pan").val(result.pan);
                                    console.log("Pan:" +result.pan);
                                    $("#stage").val(result.stage);
                                    console.log("Stage:" +result.stage);
                                    $("#MonthCode").val(result.monthCode);
                                    console.log("MonthCode:" +result.monthCode);
                                    $('#campaignId').val(result.campaignId);
                                    console.log("campaignId:" +result.campaignId);
                                    $('#crtObjectId').val(result.crtObjectId);
                                    console.log("crtObjectId:" +result.crtObjectId);
                                    $('#sessionId').val(result.sessionId);
                                    console.log("sessionId:" +result.sessionId);
                                    $('#userCrtObjectId').val(result.userCrtObjectId);
                                    console.log("userCrtObjectId:" +result.userCrtObjectId);
                                    $('#customerId').val(result.customerId);
                                    console.log("dialer_customerId:" +result.customerId);
                                    $('#leadId').val(result.leadId);
                                    console.log("leadId:" +result.leadId);
                                    $('#lead_name').val(result.lead_name);
                                    console.log("lead_name:" +result.lead_name);
                                    $('#dialer_callType').val(result.dialer_callType);
                                    console.log("dialer_callType:" +result.dialer_callType);
                                    $('#crm_push_generated_time').val(result.crm_push_generated_time);
                                    console.log("crm_push_generated_time:" +result.crm_push_generated_time);
                                    $('#instanceId').val(result.instanceId);
                                    console.log("instanceId:" +result.instanceId);
                                    $('#locale').val(result.locale);
                                    console.log("locale:" +result.locale);
                                    $('#origin').val(result.origin);
                                    console.log("origin:" +result.origin);
                                    $('#iframeId').val(result.iframeId);
                                    console.log("iframeId:" +result.iframeId);
                                    $('#txtstage').text(': ' +result.stageName);
                                    console.log("Stage:" +result.stage);
                                    $('#userId').val(result.userId);
                                    console.log("userId:" +result.userId);
                                    $("#txtMonthCode").text(': ' + result.monthCode);
                                    console.log("MonthCode:" + result.monthCode);
                                    $('#txtProduct').text(': ' +result.product);
                                    console.log("Product:"+result.product);
                                    $('#txtProductCode').text(': ' +result.productCode);
                                    console.log("ProductCode:"+result.productCode);
                                    $('#txtProductType').text(': ' +result.productType);
                                    console.log("ProductType:"+result.productType);
                                    $('#txtLoanDetails').val(result.loanDetails);
                                    console.log("LoanDetails:"+result.loanDetails);
                                    $('#txtCustomerDetails').val(result.customerDetails);
                                    console.log("CustomerDetails:"+result.customerDetails);
                                    $('#txtsearch').val(result.maskedValue);
                                    console.log("MaskedValue:" + result.maskedValue);
                                    getHistory_List(result.mobileNumber, result.monthCode);
                                    get_MainDispo(result.stage);

                                    snackBar("success", result.msg, "✔", 5000, "0.5s", "tr");
                                    $('.spinner').css('display', 'block').fadeOut();
                                }
                                else if (result.status == "error") {
                                    snackBar("danger", result.msg, "✘", 5000, "0.5s", "tr");
                                    $('.spinner').css('display', 'block').fadeOut();
                                    return;
                                }

                            } else {
                                snackBar("danger", "undefined", "✘", 5000, "0.5s", "tr");
                                $('.spinner').css('display', 'block').fadeOut();
                                return;
                            }
                        } else {
                            snackBar("danger", "Something went wrong", "✘", 5000, "0.5s", "tr");
                            $('.spinner').css('display', 'block').fadeOut();
                            return;
                        }
                    },
                    failure: function (result) {
                        snackBar("danger", result.responseText, "✘", 5000, "0.5s", "tr");
                        $('.spinner').css('display', 'block').fadeOut();
                        return;
                    },
                    error: function (result) {
                        snackBar("danger", result.responseText, "✘", 5000, "0.5s", "tr");
                        $('.spinner').css('display', 'block').fadeOut();
                        return;
                    }
                });
            }
            else {
                snackBar("danger", "Please enter valid number", "✘", 5000, "0.5s", "tr");
                $('.spinner').css('display', 'block').fadeOut();
                return;
            }
        });
    } catch (errorMessage) {
        snackBar("danger", errorMessage, "✘", 5000, "0.5s", "tr");
        $('.spinner').css('display', 'block').fadeOut();
        return;
    } finally {
    }
    });

        function getHistory_List(mobilenumber, monthcode) {
                    try {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Content("~/")' + "Home/getHistory_List?MobileNumber="+mobilenumber+"&MonthCode="+monthcode,
                            contentType: "application/json; charset:utf-8",
                            dataType: "json",
                            success: function (result) {
                                if (result != null) {
                                    if (result != undefined) {
                                        console.log("history"+result);
                                        DynamicTable.renderTable({
                                            jsonData: result,
                                            targetElementId: 'DivTempTable1',
                                            tableClasses: ["table", "table-responsive", "table-bordered"],
                                            columnModifiers: []
                                        });

                                    } else {
                                        snackBar("danger", "undefined", "✘", 5000, "0.5s", "tr");
                                        return;
                                    }
                                } else {
                                    snackBar("danger", "Something went wrong", "✘", 5000, "0.5s", "tr");
                                    return;
                                }
                            },
                            failure: function (result) {
                                snackBar("danger", result.responseText, "✘", 5000, "0.5s", "tr");
                                return;
                            },
                            error: function (result) {
                                snackBar("danger", result.responseText, "✘", 5000, "0.5s", "tr");
                                return;
                            }
                        });


                    } catch (errorMessage) {
                        snackBar("danger", errorMessage, "✘", 5000, "0.5s", "tr");
                        return;
                    }
    }
    function get_MainDispo(stageCode) {
        var stage = stageCode;
                $.ajax({
                    url: '@Url.Action("GetDropDownMainDisposition", "Home")',
                    data: { stage: stage },
                    type: 'GET',
                    success: function (data) {
                        console.log(data);
                        $('#ddlMainDisposition').empty();
                        $('#ddlMainDisposition').append('<option value="">Select</option>');

                        $.each(data, function (index, item) {
                            $('#ddlMainDisposition').append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log("AJAX Error: " + error);
                        /*alert("An error occurred while fetching sub dispositions.");*/
                        snackBar("danger", "An error occurred while fetching main dispositions", "✘", 5000, "0.5s", "tr");
                    }
                });
            }
            $(document).ready(function () {
            $('#ddlMainDisposition').change(function () {
                var mainDispoId = $(this).val();
                console.log(mainDispoId);
                $.ajax({
                    url: '@Url.Action("GetSubDispositionsByMain", "Home")',
                    data: { mainDispoId: mainDispoId },
                    type: 'POST',
                    success: function (data) {
                        console.log(data);
                        $('#ddlSubDisposition').empty();
                        $('#ddlSubDisposition').append('<option value="">Select</option>');

                        $.each(data, function (index, item) {
                            $('#ddlSubDisposition').append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                        const DispoCode = ["1","2","3","4","5","6","7","8","23"];
                        if (DispoCode.includes(mainDispoId)) {
                            $('#lblcallbackdate').show('fade');
                            $('#txtcallbackdate').show('fade');
                            $('#lblcbnote').show('fade');
                        } else {
                            $('#lblcallbackdate').hide('fade');
                            $('#txtcallbackdate').hide('fade');
                            $('#lblcbnote').hide('fade');
                        }
                        if (mainDispoId !== "10" && mainDispoId !== "11") {
                            $('#ddlSubDisposition').hide('fade');
                            $('#lblSubDispo').hide('fade');
                        } else {
                            $('#ddlSubDisposition').show('fade');
                            $('#lblSubDispo').show('fade');
                        }

                    },
                    error: function (xhr, status, error) {
                        console.log("AJAX Error: " + error);
                        /*alert("An error occurred while fetching sub dispositions.");*/
                        snackBar("danger", "An error occurred while fetching sub dispositions", "✘", 5000, "0.5s", "tr");
                    }
                });
            });
         });
        function copyText() {
            // Get the text box element
            var copyText = document.getElementById("Dialer_Config");

            // Select the text field
            copyText.select();
            copyText.setSelectionRange(0, 99999); // For mobile devices

            // Copy the text inside the text field
            navigator.clipboard.writeText(copyText.value);

            if (copyText.value != null && copyText.value != "") {
                snackBar("success", "Dialer_Config Copied To Clipboard", "✘", 5000, "0.5s", "tr");
            }
            //// Alert the copied text (optional)
            //alert("Copied the text: " + copyText.value);
        }
            var pendingMFL = null; // global variable to store data for confirmation

    $(function () {
        try {
            $("#btnSub").click(function () {
                $('.spinner').css('display', 'block').fadeIn();

                var MFL = new Object();
                MFL.Id = $('#hdhId').val();
                MFL.Stage = $('#stage').val();
                MFL.MonthCode = $('#MonthCode').val();
                MFL.MainDisposition = $('#ddlMainDisposition').val();
                MFL.SubDisposition = $('#ddlSubDisposition').val();
                MFL.CallBackDate = $('#txtcallbackdate').val();
                MFL.Remarks = $('#Remarks').val();
                MFL.Dialer_Config = $('#Dialer_Config').val();
                MFL.userId = $('#userId').val();
                console.log(MFL);

                if (!MFL.Id) {
                    $('.spinner').fadeOut();
                    snackBar("danger", "Please Search Customer Details First", "✘", 5000, "0.5s", "tr");
                    return false;
                }

                if (!MFL.MainDisposition || MFL.MainDisposition === '0') {
                    $('.spinner').fadeOut();
                    snackBar("danger", "Please select Disposition", "✘", 5000, "0.5s", "tr");
                    $("#CallingType").focus();
                    return false;
                }

                if (["10", "11"].includes(MFL.MainDisposition)) {
                    if (!MFL.SubDisposition || MFL.SubDisposition === '0') {
                        $('.spinner').fadeOut();
                        snackBar("danger", "Please Select the SubDisposition", "✘", 5000, "0.5s", "tr");
                        $("#Disposition").focus();
                        return false;
                    }
                }

                if (["1","2","3","4","5","6","7","8","23"].includes(MFL.MainDisposition)) {
                    if (!MFL.CallBackDate) {
                        $('.spinner').fadeOut();
                        snackBar("danger", "Please Select The Followup Date", "✘", 5000, "0.5s", "tr");
                        $("#txtcallbackdate").focus();
                        return false;
                    }
                }

                if (!MFL.CallBackDate) MFL.CallBackDate = "0001-01-01T00:00:00";
                if (!MFL.SubDisposition) MFL.SubDisposition = null;
                if (!MFL.Remarks) MFL.Remarks = null;

                        var selectedText = $('#ddlMainDisposition option:selected').text();
                        var $modalHeader = $('#confirmLabelbg');
                        var $modalBorder = $('#confirmLabelbr');
                        var $modalConfirm = $('#confirmSubmit');
                        var $modalCancel = $('#btnCancel');
                        
                        $modalHeader.removeClass('bg-danger bg-success bg-warning bg-info bg-primary');
                        $modalBorder.removeClass('border-danger border-success border-warning border-info border-primary');
                        $modalConfirm.removeClass('btn-danger btn-success btn-warning btn-info btn-primary');
                        $modalCancel.removeClass('btn-outline-danger btn-outline-success btn-outline-warning btn-outline-info btn-outline-primary');
                        
                        var textClass = "";
                        if (selectedText.includes("Failed")) {
                            textClass = "text-danger fw-bold";
                            $modalHeader.addClass('bg-danger');
                            $modalBorder.addClass('border-danger');
                            $modalConfirm.addClass('btn-danger');
                            $modalCancel.addClass('btn-outline-danger');
                        } else {
                            textClass = "text-primary fw-bold";
                            $modalHeader.addClass('bg-primary');
                            $modalBorder.addClass('border-primary');
                            $modalConfirm.addClass('btn-primary');
                            $modalCancel.addClass('btn-outline-primary');
                        }
                        $('#lblmessage').html("Are you sure you want to save as '<span class='" + textClass + "'>" + selectedText + "</span>'?");
                        
                        if (MFL.MainDisposition !== null && MFL.MainDisposition !== "") {
                            pendingMFL = MFL;
                            $('#confirmModal').modal('show');
                            return false
                        }
            });
            $('#confirmSubmit').click(function () {
                $('#confirmModal').modal('hide');
                if (pendingMFL) {
                    submitData(pendingMFL);
                    pendingMFL = null;
                }
            });
            $('#confirmCancel, #confirmModal .cancel').click(function () {
            $('#confirmModal').modal('hide');
            $('.spinner').fadeOut(); // stop spinner on cancel
        });

        } catch (errorMessage) {
            snackBar("danger", errorMessage, "✘", 5000, "0.5s", "tr");
            $('.spinner').fadeOut();
            return;
        }
    });

    function submitData(MFL) {
        console.log("Submitting data:", MFL);
        if (MFL.Id && MFL.Id.trim().length > 0) {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/")' + "Home/SaveCustomerDetails",
                data: JSON.stringify(MFL),
                contentType: "application/json; charset:utf-8",
                dataType: "json",
                success: function (result) {
                        if (result != null) {
                            if (result != undefined) {
                                if (result.status == "success")
                                {
                                    snackBar("success", result.msg, "✔", 5000, "0.5s", "tr");
                                    $('.spinner').css('display', 'block').fadeOut();

                                        if (MFL.Dialer_Config && MFL.Dialer_Config.trim().length > 0) {
                                            Dispose();
                                        }
                                    clearfields();
                                }
                                else if (result.status == "error") {
                                    snackBar("danger", result.msg, "✘", 5000, "0.5s", "tr");
                                    $('.spinner').css('display', 'block').fadeOut();
                                    return;
                                }
                            } else {
                                snackBar("danger", "undefined", "✘", 5000, "0.5s", "tr");
                                $('.spinner').css('display', 'block').fadeOut();
                                return;
                            }
                        } else {
                            snackBar("danger", "Something went wrong", "✘", 5000, "0.5s", "tr");
                            $('.spinner').css('display', 'block').fadeOut();
                            return;
                        }
                    },
                    failure: function (result) {
                        snackBar("danger", result.responseText, "✘", 5000, "0.5s", "tr");
                        $('.spinner').css('display', 'block').fadeOut();
                        return;
                    },
                    error: function (result) {
                        snackBar("danger", result.responseText, "✘", 5000, "0.5s", "tr");
                        $('.spinner').css('display', 'block').fadeOut();
                        return;
                    }
                });
            }
            else {
                snackBar("danger", "Please Submit with Valid Registered Mobile Number", "✘", 5000, "0.5s", "tr");
                $('.spinner').css('display', 'block').fadeOut();
                return;
            }
        }

        function Dispose() {
        try {
                            $('.spinner').css('display', 'block').fadeIn();
                            var ddtext = $("#ddlMainDisposition option:selected").text();

                            console.log(ddtext);
                            console.log($('#txtcallbackdate').val());

                            var  MFL = new Object();
                             MFL.customerId = $('#customerId').val();
                             MFL.Disposition = $('#ddlMainDisposition').val();
                             MFL.CallBackDate = $('#txtcallbackdate').val();
                             MFL.campaignId = $('#campaignId').val();
                             MFL.sessionId = $('#sessionId').val();
                             MFL.dispositionName = ddtext;
                             MFL.userCrtObjectId = $('#userCrtObjectId').val();
                             MFL.MobileNumber = $('#MobileNumber').val();
                             MFL.crtObjectId = $('#crtObjectId').val();
                             console.log(MFL);
                            if(!MFL.CallBackDate){
                                MFL.CallBackDate="0001-01-01T00:00:00";
                            }

                             if (MFL.Disposition.length > 0) {
                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Content("~/")' + "Home/Dispose_Call_Dialer",
                                    data: JSON.stringify(MFL),
                                    contentType: "application/json; charset:utf-8",
                                    dataType: "json",
                                    success: function (result) {
                                        if (result != null) {
                                            if (result != undefined) {
                                                if (result.status == "success") {
                                                    snackBar("success", result.msg, "✔", 5000, "0.5s", "tr");
                                                    $('.spinner').css('display', 'block').fadeOut();
                                                    clearfields();

                                                    $('#dialer_hide').hide();
                                                }
                                                else if (result.status == "error") {
                                                    snackBar("danger", result.msg, "✘", 5000, "0.5s", "tr");
                                                    $('.spinner').css('display', 'block').fadeOut();
                                                    return;
                                                }
                                            } else {
                                                snackBar("danger", "undefined", "✘", 5000, "0.5s", "tr");
                                                $('.spinner').css('display', 'block').fadeOut();
                                                return;
                                            }
                                        } else {
                                            snackBar("danger", "Something went wrong", "✘", 5000, "0.5s", "tr");
                                            $('.spinner').css('display', 'block').fadeOut();
                                            return;
                                        }
                                    },
                                    failure: function (result) {
                                        snackBar("danger", response.responseText, "✘", 5000, "0.5s", "tr");
                                        $('.spinner').css('display', 'block').fadeOut();
                                        return;
                                    },
                                    error: function (result) {
                                        snackBar("danger", response.responseText, "✘", 5000, "0.5s", "tr");
                                        $('.spinner').css('display', 'block').fadeOut();
                                        return;
                                    }
                                });
                            }
                            else {
                                snackBar("danger", "Please Submit with Valid Registered Mobile Number", "✘", 5000, "0.5s", "tr");
                                $('.spinner').css('display', 'block').fadeOut();
                                return;
                            }

                    } catch (errorMessage) {
                        snackBar("danger", errorMessage, "✘", 5000, "0.5s", "tr");
                        $('.spinner').css('display', 'block').fadeOut();
                        return;
                    } finally {
                    }

        }
        clearfields = function () {
            $('#CustDeatils').hide('fade');
            $('#DivStage').hide('fade');
            $('#lblcallbackdate').hide('fade');
            $('#txtcallbackdate').hide('fade');
            $('#lblcbnote').hide('fade');
            $('#ID, #txtsearch, #hdhId, #stage, #ddlMainDisposition, #ddlSubDisposition, #txtcallbackdate, #Remarks').val('');
            $("txtstage").text('');
        }
</script>

<style>
    .grid-wrapper {
        max-height: 300px;
        overflow-y: auto;
        overflow-x: auto;
    }

        .grid-wrapper table thead th {
            position: sticky;
            top: 0;
            background: #0033a0;
            color: white;
            z-index: 2;
        }

    .text {
        color: #0033a0;
    }
</style>